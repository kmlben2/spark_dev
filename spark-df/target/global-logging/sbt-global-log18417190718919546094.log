[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":4,"message":"Processing"})[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (/Users/camelia/Downloads/spark-df/target/scala-2.13/zinc/inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed 18 mars 2022, 00:14:43[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":4,"message":"Done"})[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///Users/camelia/Downloads/spark-df/src/main/scala/fr/data/spark/DataFrame.scala","languageId":"scala","version":1,"text":"package fr.data.spark\n\nimport org.apache.spark.{SparkConf, SparkContext, sql}\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\n\nobject DataFrame {\n\n  def main(args: Array[String]): Unit = {\n    val spark = SparkSession.builder().appName(\"job1\")\n                                      .master(\"local[*]\")\n                                      .getOrCreate()\n\nval df = spark.read.format(\"csv\").option(\"header\",\"true\")\n                                .option(\"delimiter\", \";\")\n                                .option(\"inferSchema\", \"true\")\n                                .load(\"src/main/resources/codesPostaux.csv\")\ndf.show()\n\ndf.printSchema\n\ndf.select(countDistinct(\"Code_commune_INSEE\"))\n  .show()\n\ndf.filter(col(\"Ligne_5\")\n  .isNotNull)\n  .select(countDistinct(\"Code_commune_INSEE\"))\n  .show()\n\n\n\nval new_df = df.withColumn(\"Departement\", col(\"Code_commune_INSEE\").substr(1,2))\nnew_df.show()\n\nnew_df.sort(\"Code_postal\").write.option(\"header\",true).csv(\"Nom_commune.csv\")\n\nprintln(\"SAUT \\n\")\nnew_df.filter(\"Departement = 2\").show()\n\n\nprintln(\" \\n Departement avec le plus de communes \\n\")\nnew_df.groupBy(\"Departement\").count().sort(desc(\"count\")).show()\n  }\n}"}})[0m
